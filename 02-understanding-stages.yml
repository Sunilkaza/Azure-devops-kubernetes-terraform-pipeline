trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
 - stage: Build
   jobs:
    - job: FirstJob
      steps:
       - bash: echo Build FirstJob   
       - bash: echo $(PipelineLevelVariable)
       - bash: echo $(Build.BuildNumber)
       - bash: echo $(Build.BuildId)
       - bash: echo $(Build.SourceBranchName)
       - bash: echo $(Build.DefaultWorkingDirectory)
       - bash: ls -R $(System.DefaultWorkingDirectory)
       - bash: echo $(Build.ArtifactStagingDirectory)
       - bash: java -version
       - bash: node --version
       - bash: python --version
       - bash: mvn -version
       - bash: ls -R $(Build.ArtifactStagingDirectory)
       - task: CopyFiles@2
         inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)'
            Contents: |
              **/*.yaml
              **/*.tf
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
            delayBetweenRetries: '10'
       - bash: ls -R $(Build.ArtifactStagingDirectory)
       - task: PublishBuildArtifacts@1
         inputs:
           PathtoPublish: '$(Build.ArtifactStagingDirectory)'
           ArtifactName: 'drop-first-artiface'
           publishLocation: 'Container'



    # - job: SecondJob
    #   steps:
    #    - bash: echo Build SecondJob
#  - stage: DevDeploy
#    variables: 
#     Environment: Dev
#    dependsOn: Build
#    jobs:
#     - job: DevDeployJob
#       steps:
#        - bash: echo $(Enviroment) DevDeployJob 
#  - stage: QADeploy
#    variables: 
#     Environment: QA
#    dependsOn: Build
#    jobs:
#     - job: QADeployJob
#       steps:
#        - bash: echo $(Environment) QADeployJob
#  - stage: ProdDeploy
#    variables:
#     Environment: Prod
#    dependsOn: 
#     - DevDeploy
#     - QADeploy
#    jobs:
#     - job: ProdDeployJob
#       steps:
#        - bash: echo  $(Environment) ProdDeployJob

# - script: |
  #  echo Add other tasks to build, test, and deploy your project.
 #   echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'
